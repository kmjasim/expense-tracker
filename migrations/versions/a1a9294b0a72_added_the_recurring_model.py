"""Added the recurring model

Revision ID: a1a9294b0a72
Revises: 5f71b00b49de
Create Date: 2025-10-03 00:42:43.722050

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a1a9294b0a72'
down_revision = '5f71b00b49de'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('recurring_rules',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('income', 'expense', 'transfer_domestic', 'transfer_international', 'refund', 'fee', 'adjustment', name='txn_type_enum', native_enum=False), nullable=False),
    sa.Column('amount', sa.Numeric(precision=14, scale=2), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('frequency', sa.Enum('daily', 'weekly', 'monthly', name='recurring_frequency_enum', native_enum=False), nullable=False),
    sa.Column('every_n', sa.Integer(), server_default=sa.text('1'), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('next_run', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('weekday', sa.Integer(), nullable=True),
    sa.Column('day_of_month', sa.Integer(), nullable=True),
    sa.Column('is_enabled', sa.Boolean(), server_default=sa.text('(true)'), nullable=False),
    sa.Column('last_run', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('recurring_rules', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_recurring_rules_user_id'), ['user_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('recurring_rules', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_recurring_rules_user_id'))

    op.drop_table('recurring_rules')
    # ### end Alembic commands ###
