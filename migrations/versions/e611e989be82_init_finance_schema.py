"""init_finance_schema

Revision ID: e611e989be82
Revises: 
Create Date: 2025-09-21 20:44:36.473810

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e611e989be82'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('accounts',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('display_order', sa.Integer(), server_default=sa.text('(1000)'), nullable=False),
    sa.Column('currency', sa.Enum('KRW', 'BDT', name='currency_enum', native_enum=False), nullable=False),
    sa.Column('type', sa.Enum('bank', 'credit', 'cash', 'mobile_wallet', name='account_type_enum', native_enum=False), nullable=False),
    sa.Column('initial_balance', sa.Numeric(precision=14, scale=2), server_default=sa.text('0'), nullable=False),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('(true)'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sqlite_autoincrement=True
    )
    with op.batch_alter_table('accounts', schema=None) as batch_op:
        batch_op.create_index('ix_accounts_user_currency_type', ['user_id', 'currency', 'type'], unique=False)
        batch_op.create_index(batch_op.f('ix_accounts_user_id'), ['user_id'], unique=False)
        batch_op.create_index('ix_accounts_user_name', ['user_id', 'name'], unique=False)

    op.create_table('recipients',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('type', sa.Enum('person', 'business', 'self_', name='recipient_type_enum', native_enum=False), server_default='person', nullable=False),
    sa.Column('country', sa.Text(), nullable=True),
    sa.Column('default_method', sa.Enum('bank', 'mobile_wallet', 'cash', 'other', name='method_enum', native_enum=False), nullable=True),
    sa.Column('default_service_name', sa.Text(), nullable=True),
    sa.Column('default_account_no_masked', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('is_favorite', sa.Boolean(), server_default=sa.text('(false)'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sqlite_autoincrement=True
    )
    with op.batch_alter_table('recipients', schema=None) as batch_op:
        batch_op.create_index('ix_recipients_user_fav', ['user_id', 'is_favorite'], unique=False)
        batch_op.create_index(batch_op.f('ix_recipients_user_id'), ['user_id'], unique=False)
        batch_op.create_index('ix_recipients_user_name', ['user_id', 'name'], unique=False)

    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sqlite_autoincrement=True
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)

    op.create_table('categories',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['categories.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'parent_id', 'name', name='uq_categories_user_parent_name'),
    sqlite_autoincrement=True
    )
    with op.batch_alter_table('categories', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_categories_user_id'), ['user_id'], unique=False)

    op.create_table('transactions_bdt',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('type', sa.Enum('income', 'expense', 'transfer_domestic', 'transfer_international', 'refund', 'fee', 'adjustment', name='txn_type_enum', native_enum=False), nullable=False),
    sa.Column('amount', sa.Numeric(precision=14, scale=2), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('is_pending', sa.Boolean(), server_default=sa.text('(false)'), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('(false)'), nullable=False),
    sa.Column('recipient_id', sa.Integer(), nullable=True),
    sa.Column('recipient_name', sa.Text(), nullable=True),
    sa.Column('method', sa.Enum('bank', 'mobile_wallet', 'cash', 'other', name='method_enum', native_enum=False), nullable=True),
    sa.Column('service_name', sa.Text(), nullable=True),
    sa.Column('amount_sent_krw', sa.Numeric(precision=14, scale=2), nullable=True),
    sa.Column('amount_received_bdt', sa.Numeric(precision=14, scale=2), nullable=True),
    sa.Column('fx_rate_used', sa.Numeric(precision=12, scale=6), nullable=True),
    sa.Column('fee_amount', sa.Numeric(precision=14, scale=2), nullable=True),
    sa.Column('fee_currency', sa.Enum('KRW', 'BDT', name='currency_enum', native_enum=False), nullable=True),
    sa.Column('transfer_group_id', sa.String(length=36), nullable=True),
    sa.Column('external_ref', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ),
    sa.ForeignKeyConstraint(['recipient_id'], ['recipients.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sqlite_autoincrement=True
    )
    with op.batch_alter_table('transactions_bdt', schema=None) as batch_op:
        batch_op.create_index('ix_t_bdt_user_category_date', ['user_id', 'category_id', 'date'], unique=False)
        batch_op.create_index('ix_t_bdt_user_date', ['user_id', 'date'], unique=False)
        batch_op.create_index('ix_t_bdt_user_method_date', ['user_id', 'method', 'date'], unique=False)
        batch_op.create_index('ix_t_bdt_user_recipient_date', ['user_id', 'recipient_id', 'date'], unique=False)
        batch_op.create_index('ix_t_bdt_user_type_date', ['user_id', 'type', 'date'], unique=False)
        batch_op.create_index(batch_op.f('ix_transactions_bdt_user_id'), ['user_id'], unique=False)

    op.create_table('transactions_krw',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('type', sa.Enum('income', 'expense', 'transfer_domestic', 'transfer_international', 'refund', 'fee', 'adjustment', name='txn_type_enum', native_enum=False), nullable=False),
    sa.Column('amount', sa.Numeric(precision=14, scale=2), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('is_pending', sa.Boolean(), server_default=sa.text('(false)'), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('(false)'), nullable=False),
    sa.Column('recipient_id', sa.Integer(), nullable=True),
    sa.Column('recipient_name', sa.Text(), nullable=True),
    sa.Column('method', sa.Enum('bank', 'mobile_wallet', 'cash', 'other', name='method_enum', native_enum=False), nullable=True),
    sa.Column('service_name', sa.Text(), nullable=True),
    sa.Column('amount_sent_krw', sa.Numeric(precision=14, scale=2), nullable=True),
    sa.Column('amount_received_bdt', sa.Numeric(precision=14, scale=2), nullable=True),
    sa.Column('fx_rate_used', sa.Numeric(precision=12, scale=6), nullable=True),
    sa.Column('fee_amount', sa.Numeric(precision=14, scale=2), nullable=True),
    sa.Column('fee_currency', sa.Enum('KRW', 'BDT', name='currency_enum', native_enum=False), nullable=True),
    sa.Column('transfer_group_id', sa.String(length=36), nullable=True),
    sa.Column('external_ref', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ),
    sa.ForeignKeyConstraint(['recipient_id'], ['recipients.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sqlite_autoincrement=True
    )
    with op.batch_alter_table('transactions_krw', schema=None) as batch_op:
        batch_op.create_index('ix_t_krw_user_category_date', ['user_id', 'category_id', 'date'], unique=False)
        batch_op.create_index('ix_t_krw_user_date', ['user_id', 'date'], unique=False)
        batch_op.create_index('ix_t_krw_user_method_date', ['user_id', 'method', 'date'], unique=False)
        batch_op.create_index('ix_t_krw_user_recipient_date', ['user_id', 'recipient_id', 'date'], unique=False)
        batch_op.create_index('ix_t_krw_user_type_date', ['user_id', 'type', 'date'], unique=False)
        batch_op.create_index(batch_op.f('ix_transactions_krw_user_id'), ['user_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('transactions_krw', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_transactions_krw_user_id'))
        batch_op.drop_index('ix_t_krw_user_type_date')
        batch_op.drop_index('ix_t_krw_user_recipient_date')
        batch_op.drop_index('ix_t_krw_user_method_date')
        batch_op.drop_index('ix_t_krw_user_date')
        batch_op.drop_index('ix_t_krw_user_category_date')

    op.drop_table('transactions_krw')
    with op.batch_alter_table('transactions_bdt', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_transactions_bdt_user_id'))
        batch_op.drop_index('ix_t_bdt_user_type_date')
        batch_op.drop_index('ix_t_bdt_user_recipient_date')
        batch_op.drop_index('ix_t_bdt_user_method_date')
        batch_op.drop_index('ix_t_bdt_user_date')
        batch_op.drop_index('ix_t_bdt_user_category_date')

    op.drop_table('transactions_bdt')
    with op.batch_alter_table('categories', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_categories_user_id'))

    op.drop_table('categories')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    with op.batch_alter_table('recipients', schema=None) as batch_op:
        batch_op.drop_index('ix_recipients_user_name')
        batch_op.drop_index(batch_op.f('ix_recipients_user_id'))
        batch_op.drop_index('ix_recipients_user_fav')

    op.drop_table('recipients')
    with op.batch_alter_table('accounts', schema=None) as batch_op:
        batch_op.drop_index('ix_accounts_user_name')
        batch_op.drop_index(batch_op.f('ix_accounts_user_id'))
        batch_op.drop_index('ix_accounts_user_currency_type')

    op.drop_table('accounts')
    # ### end Alembic commands ###
